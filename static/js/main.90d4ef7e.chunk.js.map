{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["bets","name","current","target","useStyles","makeStyles","root","backgroundColor","height","title","fontSize","lineHeight","App","classes","Container","className","fluid","maxWidth","Box","pt","Typography","align","component","variant","p","Grid","container","spacing","item","xs","map","bet","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPASMA,G,MAAO,CACX,CACEC,KAAM,UACNC,QAAS,IACTC,OAAQ,OAEV,CACEF,KAAM,WACNC,QAAS,GACTC,OAAQ,MAEV,CACEF,KAAM,SACNC,QAAS,EACTC,OAAQ,MAEV,CACEF,KAAM,UACNC,QAAS,EACTC,OAAQ,KAEV,CACEF,KAAM,QACNC,QAAS,EACTC,OAAQ,KAEV,CACEF,KAAM,kBACNC,QAAS,GACTC,OAAQ,QAINC,EAAYC,YAAW,CAC3BC,KAAM,CACJC,gBAAiB,UACjBC,OAAO,SAETC,MAAO,CACLC,SAAU,OACVC,WAAY,UAkDDC,MA9Cf,WACE,IAAMC,EAAUT,IAEhB,OACI,cAACU,EAAA,EAAD,CAAWC,UAAWF,EAAQP,KAAMU,OAAK,EAAzC,SACI,eAACF,EAAA,EAAD,CAAWC,UAAWF,EAAQP,KAAMW,SAAS,KAA7C,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACC,EAAA,EAAD,CAAYL,UAAWF,EAAQJ,MAAOY,MAAM,SAASC,UAAU,KAAKC,QAAQ,UAA5E,mCAIJ,eAACL,EAAA,EAAD,CAAKM,EAAG,EAAR,UACE,cAACJ,EAAA,EAAD,CAAYE,UAAU,KAAKC,QAAQ,UAAnC,SACA,eAACE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,iBAGA,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,qBAGA,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,uBAKD7B,EAAK8B,KAAI,SAACC,EAAIC,GACb,OACE,eAACP,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACA,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACGE,EAAI9B,OAEP,cAACwB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACGE,EAAI7B,UAEP,cAACuB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACGE,EAAI5B,wBC5EV8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.90d4ef7e.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n\nimport './App.css';\n\nconst bets = [\n  {\n    name: 'Wentzer',\n    current: 112,\n    target: 255.5\n  },\n  {\n    name: 'Scotty-B',\n    current: 62,\n    target: 64.5\n  },\n  {\n    name: 'Cooper',\n    current: 0,\n    target: 64.5\n  },\n  {\n    name: 'Fumbles',\n    current: 2,\n    target: 1.5\n  },\n  {\n    name: 'Sacks',\n    current: 5,\n    target: 5.5\n  },\n  {\n    name: '2nd Half Points',\n    current: 11,\n    target: 21.5\n  },\n]\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: '#118843',\n    height:'100vh'\n  },\n  title: {\n    fontSize: '3rem',\n    lineHeight: '4rem'\n  }\n});\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n      <Container className={classes.root} fluid>\n          <Container className={classes.root} maxWidth=\"sm\">\n            <Box pt={5} >\n                <Typography className={classes.title} align=\"center\" component=\"h1\" variant=\"heading\">\n                  Da Boiz Bet Checker\n                </Typography>\n            </Box>\n            <Box p={3}>\n              <Typography component=\"h2\" variant=\"heading\">\n              <Grid container spacing={3}>\n                <Grid item xs={6}>\n                  Bet\n                </Grid>\n                <Grid item xs={3}>\n                  Current\n                </Grid>\n                <Grid item xs={3}>\n                  Goal\n                </Grid>\n              </Grid>\n              </Typography>\n              {bets.map((bet,index) => {\n                return (\n                  <Grid container spacing={5}>\n                  <Grid item xs={6}>\n                    {bet.name}\n                  </Grid>\n                  <Grid item xs={3}>\n                    {bet.current}\n                  </Grid>\n                  <Grid item xs={3}>\n                    {bet.target}\n                  </Grid>\n                </Grid>\n                )\n              })}\n            </Box>\n        </Container>\n      </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}